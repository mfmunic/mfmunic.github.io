{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcm\\\\homepage\\\\mfmunic.github.io\\\\src\\\\components\\\\displays\\\\contactItems\\\\EmailCI.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as record from '../../../modules/actions/display';\n\nclass EmailCI extends Component {\n  handleEmailChange(event) {\n    event.preventDefault();\n    this.props.dispatch(record.email(event.target.value));\n  }\n\n  handleSubjectChange(event) {\n    event.preventDefault();\n    this.props.dispatch(record.subject(event.target.value));\n  }\n\n  handleContentChange(event) {\n    event.preventDefault();\n    this.props.dispatch(record.content(event.target.value));\n  }\n\n  checkEmail(address, content) {\n    const validCheck = [];\n\n    if (!address.includes('@' && '.')) {\n      validCheck.push('address');\n    }\n\n    if (content.length === 0) {\n      validCheck.push('content');\n    }\n\n    this.props.dispatch(record.failValid(validCheck));\n    return validCheck;\n  }\n\n  handleSubmit(address, subject, content, event) {\n    event.preventDefault();\n    address = address.trim();\n    subject = subject.trim();\n    content = content.trim();\n    const validator = this.checkEmail(address, content);\n\n    if (validator.length === 0) {\n      this.props.dispatch(record.mail(address, subject, content));\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(record.failValid([]));\n    this.props.dispatch(record.resetEmail());\n  }\n\n  render() {\n    const _this$props$display = this.props.display,\n          emailAddress = _this$props$display.emailAddress,\n          emailSubject = _this$props$display.emailSubject,\n          emailContent = _this$props$display.emailContent,\n          addressFail = _this$props$display.addressFail,\n          contentFail = _this$props$display.contentFail,\n          emailRecieved = _this$props$display.emailRecieved;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"emailDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, emailRecieved ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"orange-Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"EMAIL SENT!\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"orange-Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"I look forward to connecting with you.\")) : /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"emailAddress\",\n      className: addressFail ? 'failed' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Email\", ' ', addressFail ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"REQUIRED\")) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"(required)\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"emailAddress\",\n      onChange: this.handleEmailChange.bind(this),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"subjectLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"subjectLine\",\n      onChange: this.handleSubjectChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"emailContent\",\n      className: contentFail ? 'failed' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Content\", ' ', contentFail ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"REQUIRED\")) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, \"(required)\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"emailContent\",\n      onChange: this.handleContentChange.bind(this),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      id: \"sendEmail\",\n      onClick: this.handleSubmit.bind(this, emailAddress, emailSubject, emailContent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Send It!\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    routing: state.routing,\n    display: state.display\n  };\n}\n\nexport default connect(mapStateToProps)(EmailCI);","map":{"version":3,"sources":["C:/Users/marcm/homepage/mfmunic.github.io/src/components/displays/contactItems/EmailCI.js"],"names":["React","Component","connect","record","EmailCI","handleEmailChange","event","preventDefault","props","dispatch","email","target","value","handleSubjectChange","subject","handleContentChange","content","checkEmail","address","validCheck","includes","push","length","failValid","handleSubmit","trim","validator","mail","componentWillUnmount","resetEmail","render","display","emailAddress","emailSubject","emailContent","addressFail","contentFail","emailRecieved","bind","mapStateToProps","state","routing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as record from '../../../modules/actions/display';\r\n\r\nclass EmailCI extends Component {\r\n  handleEmailChange(event) {\r\n    event.preventDefault();\r\n    this.props.dispatch(record.email(event.target.value));\r\n  }\r\n\r\n  handleSubjectChange(event) {\r\n    event.preventDefault();\r\n    this.props.dispatch(record.subject(event.target.value));\r\n  }\r\n\r\n  handleContentChange(event) {\r\n    event.preventDefault();\r\n    this.props.dispatch(record.content(event.target.value));\r\n  }\r\n\r\n  checkEmail(address, content) {\r\n    const validCheck = [];\r\n    if (!address.includes('@' && '.')) {\r\n      validCheck.push('address');\r\n    }\r\n    if (content.length === 0) {\r\n      validCheck.push('content');\r\n    }\r\n\r\n    this.props.dispatch(record.failValid(validCheck));\r\n    return validCheck;\r\n  }\r\n\r\n  handleSubmit(address, subject, content, event) {\r\n    event.preventDefault();\r\n    address = address.trim();\r\n    subject = subject.trim();\r\n    content = content.trim();\r\n\r\n    const validator = this.checkEmail(address, content);\r\n\r\n    if (validator.length === 0) {\r\n      this.props.dispatch(record.mail(address, subject, content));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(record.failValid([]));\r\n    this.props.dispatch(record.resetEmail());\r\n  }\r\n\r\n  render() {\r\n    const { emailAddress, emailSubject, emailContent, addressFail, contentFail, emailRecieved } = this.props.display;\r\n    return (\r\n      <div id='emailDisplay'>\r\n        {/* <h1 className=\"orange-Text\">\r\n          Currently wrestling with server issues to get this back up!\r\n        </h1> */}\r\n        {emailRecieved ? (\r\n          <div>\r\n            <h1 className='orange-Text'>EMAIL SENT!</h1>\r\n            <h3 className='orange-Text'>I look forward to connecting with you.</h3>\r\n          </div>\r\n        ) : (\r\n          <form>\r\n            <div className='form-group'>\r\n              <label htmlFor='emailAddress' className={addressFail ? 'failed' : ''}>\r\n                Email{' '}\r\n                {addressFail ? (\r\n                  <span>\r\n                    <strong>REQUIRED</strong>\r\n                  </span>\r\n                ) : (\r\n                  <span className='required'>(required)</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                id='emailAddress'\r\n                onChange={this.handleEmailChange.bind(this)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='subjectLine'>Subject</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                id='subjectLine'\r\n                onChange={this.handleSubjectChange.bind(this)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='emailContent' className={contentFail ? 'failed' : ''}>\r\n                Content{' '}\r\n                {contentFail ? (\r\n                  <span>\r\n                    <strong>REQUIRED</strong>\r\n                  </span>\r\n                ) : (\r\n                  <span className='required'>(required)</span>\r\n                )}\r\n              </label>\r\n              <textarea\r\n                type='text'\r\n                className='form-control'\r\n                id='emailContent'\r\n                onChange={this.handleContentChange.bind(this)}\r\n                required\r\n              />\r\n            </div>\r\n            <div\r\n              type='submit'\r\n              className='btn btn-primary'\r\n              id='sendEmail'\r\n              onClick={this.handleSubmit.bind(this, emailAddress, emailSubject, emailContent)}>\r\n              Send It!\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    routing: state.routing,\r\n    display: state.display,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(EmailCI);\r\n"]},"metadata":{},"sourceType":"module"}