{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcm\\\\homepage\\\\mfmunic.github.io\\\\src\\\\components\\\\displays\\\\PortfolioDisplay.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GOH from \"./portfolioItems/GOHPI\";\nimport Homepage from \"./portfolioItems/HomepagePI\";\nimport RPSLS from \"./portfolioItems/RPSLSPI\";\nimport Triviagame from \"./portfolioItems/TriviagamePI\";\n\nclass PortfolioDisplay extends Component {\n  decidedDisplay(chosen) {\n    switch (chosen) {\n      case \"GOH\":\n        return /*#__PURE__*/React.createElement(GOH, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 16\n          }\n        });\n\n      case \"RPSLS\":\n        return /*#__PURE__*/React.createElement(RPSLS, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 16\n          }\n        });\n\n      case \"Triviagame\":\n        return /*#__PURE__*/React.createElement(Triviagame, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Homepage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n\n  render() {\n    const displayItem = this.decidedDisplay(this.props.display.toolbar);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"portfolioDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, displayItem);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    routing: state.routing,\n    display: state.display\n  };\n}\n\nexport default connect(mapStateToProps)(PortfolioDisplay);","map":{"version":3,"sources":["C:/Users/marcm/homepage/mfmunic.github.io/src/components/displays/PortfolioDisplay.js"],"names":["React","Component","connect","GOH","Homepage","RPSLS","Triviagame","PortfolioDisplay","decidedDisplay","chosen","render","displayItem","props","display","toolbar","mapStateToProps","state","routing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,cAAc,CAACC,MAAD,EAAS;AACrB,YAAQA,MAAR;AACE,WAAK,KAAL;AACE,4BAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,OAAL;AACE,4BAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,YAAL;AACE,4BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,4BAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AARJ;AAUD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKH,cAAL,CAAoB,KAAKI,KAAL,CAAWC,OAAX,CAAmBC,OAAvC,CAApB;AACA,wBAAO;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BH,WAA5B,CAAP;AACD;;AAhBsC;;AAmBzC,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELJ,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAFV,GAAP;AAID;;AAED,eAAeX,OAAO,CAACa,eAAD,CAAP,CAAyBR,gBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport GOH from \"./portfolioItems/GOHPI\";\r\nimport Homepage from \"./portfolioItems/HomepagePI\";\r\nimport RPSLS from \"./portfolioItems/RPSLSPI\";\r\nimport Triviagame from \"./portfolioItems/TriviagamePI\";\r\n\r\nclass PortfolioDisplay extends Component {\r\n  decidedDisplay(chosen) {\r\n    switch (chosen) {\r\n      case \"GOH\":\r\n        return <GOH />;\r\n      case \"RPSLS\":\r\n        return <RPSLS />;\r\n      case \"Triviagame\":\r\n        return <Triviagame />;\r\n      default:\r\n        return <Homepage />;\r\n    }\r\n  }\r\n  render() {\r\n    const displayItem = this.decidedDisplay(this.props.display.toolbar);\r\n    return <div id=\"portfolioDisplay\">{displayItem}</div>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    routing: state.routing,\r\n    display: state.display\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PortfolioDisplay);\r\n"]},"metadata":{},"sourceType":"module"}