{"ast":null,"code":"import React,{Component}from'react';import{connect}from'react-redux';import*as record from'../../../modules/actions/display';class EmailCI extends Component{handleEmailChange(event){event.preventDefault();this.props.dispatch(record.email(event.target.value));}handleSubjectChange(event){event.preventDefault();this.props.dispatch(record.subject(event.target.value));}handleContentChange(event){event.preventDefault();this.props.dispatch(record.content(event.target.value));}checkEmail(address,content){const validCheck=[];if(!address.includes('@'&&'.')){validCheck.push('address');}if(content.length===0){validCheck.push('content');}this.props.dispatch(record.failValid(validCheck));return validCheck;}handleSubmit(address,subject,content,event){event.preventDefault();address=address.trim();subject=subject.trim();content=content.trim();const validator=this.checkEmail(address,content);if(validator.length===0){this.props.dispatch(record.mail(address,subject,content));}}componentWillUnmount(){this.props.dispatch(record.failValid([]));this.props.dispatch(record.resetEmail());}render(){const _this$props$display=this.props.display,emailAddress=_this$props$display.emailAddress,emailSubject=_this$props$display.emailSubject,emailContent=_this$props$display.emailContent,addressFail=_this$props$display.addressFail,contentFail=_this$props$display.contentFail,emailRecieved=_this$props$display.emailRecieved;return/*#__PURE__*/React.createElement(\"div\",{id:\"emailDisplay\"},emailRecieved?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{className:\"orange-Text\"},\"EMAIL SENT!\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"orange-Text\"},\"I look forward to connecting with you.\")):/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailAddress\",className:addressFail?'failed':''},\"Email\",' ',addressFail?/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"REQUIRED\")):/*#__PURE__*/React.createElement(\"span\",{className:\"required\"},\"(required)\")),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"emailAddress\",onChange:this.handleEmailChange.bind(this),required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"subjectLine\"},\"Subject\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",id:\"subjectLine\",onChange:this.handleSubjectChange.bind(this)})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailContent\",className:contentFail?'failed':''},\"Content\",' ',contentFail?/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"REQUIRED\")):/*#__PURE__*/React.createElement(\"span\",{className:\"required\"},\"(required)\")),/*#__PURE__*/React.createElement(\"textarea\",{type:\"text\",className:\"form-control\",id:\"emailContent\",onChange:this.handleContentChange.bind(this),required:true})),/*#__PURE__*/React.createElement(\"div\",{type:\"submit\",className:\"btn btn-primary\",id:\"sendEmail\",onClick:this.handleSubmit.bind(this,emailAddress,emailSubject,emailContent)},\"Send It!\")));}}function mapStateToProps(state){return{routing:state.routing,display:state.display};}export default connect(mapStateToProps)(EmailCI);","map":{"version":3,"sources":["C:/Users/marcm/homepage/mfmunic.github.io/src/components/displays/contactItems/EmailCI.js"],"names":["React","Component","connect","record","EmailCI","handleEmailChange","event","preventDefault","props","dispatch","email","target","value","handleSubjectChange","subject","handleContentChange","content","checkEmail","address","validCheck","includes","push","length","failValid","handleSubmit","trim","validator","mail","componentWillUnmount","resetEmail","render","display","emailAddress","emailSubject","emailContent","addressFail","contentFail","emailRecieved","bind","mapStateToProps","state","routing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as record from '../../../modules/actions/display';\r\n\r\nclass EmailCI extends Component {\r\n  handleEmailChange(event) {\r\n    event.preventDefault();\r\n    this.props.dispatch(record.email(event.target.value));\r\n  }\r\n\r\n  handleSubjectChange(event) {\r\n    event.preventDefault();\r\n    this.props.dispatch(record.subject(event.target.value));\r\n  }\r\n\r\n  handleContentChange(event) {\r\n    event.preventDefault();\r\n    this.props.dispatch(record.content(event.target.value));\r\n  }\r\n\r\n  checkEmail(address, content) {\r\n    const validCheck = [];\r\n    if (!address.includes('@' && '.')) {\r\n      validCheck.push('address');\r\n    }\r\n    if (content.length === 0) {\r\n      validCheck.push('content');\r\n    }\r\n\r\n    this.props.dispatch(record.failValid(validCheck));\r\n    return validCheck;\r\n  }\r\n\r\n  handleSubmit(address, subject, content, event) {\r\n    event.preventDefault();\r\n    address = address.trim();\r\n    subject = subject.trim();\r\n    content = content.trim();\r\n\r\n    const validator = this.checkEmail(address, content);\r\n\r\n    if (validator.length === 0) {\r\n      this.props.dispatch(record.mail(address, subject, content));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(record.failValid([]));\r\n    this.props.dispatch(record.resetEmail());\r\n  }\r\n\r\n  render() {\r\n    const { emailAddress, emailSubject, emailContent, addressFail, contentFail, emailRecieved } = this.props.display;\r\n    return (\r\n      <div id='emailDisplay'>\r\n        {/* <h1 className=\"orange-Text\">\r\n          Currently wrestling with server issues to get this back up!\r\n        </h1> */}\r\n        {emailRecieved ? (\r\n          <div>\r\n            <h1 className='orange-Text'>EMAIL SENT!</h1>\r\n            <h3 className='orange-Text'>I look forward to connecting with you.</h3>\r\n          </div>\r\n        ) : (\r\n          <form>\r\n            <div className='form-group'>\r\n              <label htmlFor='emailAddress' className={addressFail ? 'failed' : ''}>\r\n                Email{' '}\r\n                {addressFail ? (\r\n                  <span>\r\n                    <strong>REQUIRED</strong>\r\n                  </span>\r\n                ) : (\r\n                  <span className='required'>(required)</span>\r\n                )}\r\n              </label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                id='emailAddress'\r\n                onChange={this.handleEmailChange.bind(this)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='subjectLine'>Subject</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                id='subjectLine'\r\n                onChange={this.handleSubjectChange.bind(this)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='emailContent' className={contentFail ? 'failed' : ''}>\r\n                Content{' '}\r\n                {contentFail ? (\r\n                  <span>\r\n                    <strong>REQUIRED</strong>\r\n                  </span>\r\n                ) : (\r\n                  <span className='required'>(required)</span>\r\n                )}\r\n              </label>\r\n              <textarea\r\n                type='text'\r\n                className='form-control'\r\n                id='emailContent'\r\n                onChange={this.handleContentChange.bind(this)}\r\n                required\r\n              />\r\n            </div>\r\n            <div\r\n              type='submit'\r\n              className='btn btn-primary'\r\n              id='sendEmail'\r\n              onClick={this.handleSubmit.bind(this, emailAddress, emailSubject, emailContent)}>\r\n              Send It!\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    routing: state.routing,\r\n    display: state.display,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(EmailCI);\r\n"]},"metadata":{},"sourceType":"module"}