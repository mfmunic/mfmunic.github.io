{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\marcm\\\\homepage\\\\mfmunic.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from \"../actionTypes\";\nconst initialState = {\n  location: \"Homepage\",\n  color: \"blue\",\n  toolbar: \"default\",\n  emailAddress: \"\",\n  emailSubject: \"\",\n  emailContent: \"\",\n  emailRecieved: false,\n  addressFail: false,\n  contentFail: false\n};\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case \"\".concat(actionTypes.DISPLAY_ITEM):\n      const _action$payload = action.payload,\n            menuItem = _action$payload.menuItem,\n            color = _action$payload.color;\n      let start = \"default\"; //TODO: add contact page\n\n      switch (menuItem) {\n        case \"Portfolio\":\n          start = \"Homepage\";\n          break;\n\n        case \"Resume\":\n          start = \"Work Experience\";\n          break;\n\n        case \"Contact\":\n          start = \"E-Mail\";\n          break;\n\n        default:\n          break;\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        location: menuItem,\n        color: color,\n        toolbar: start\n      });\n\n    case \"\".concat(actionTypes.TOOLBAR_ITEM):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        toolbar: action.payload\n      });\n\n    case \"\".concat(actionTypes.EMAIL_ADDRESS):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailAddress: action.payload\n      });\n\n    case \"\".concat(actionTypes.EMAIL_SUBJECT):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailSubject: action.payload\n      });\n\n    case \"\".concat(actionTypes.EMAIL_CONTENT):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailContent: action.payload\n      });\n\n    case \"\".concat(actionTypes.EMAIL, \"_FULFILLED\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailRecieved: action.payload\n      });\n\n    case \"\".concat(actionTypes.EMAIL_RESET):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailRecieved: action.payload\n      });\n\n    case \"\".concat(actionTypes.VALIDITRON):\n      const addressFail = action.payload.includes(\"address\");\n      const contentFail = action.payload.includes(\"content\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addressFail,\n        contentFail\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/marcm/homepage/mfmunic.github.io/src/modules/reducers/MainPageReducers.js"],"names":["actionTypes","initialState","location","color","toolbar","emailAddress","emailSubject","emailContent","emailRecieved","addressFail","contentFail","state","action","type","DISPLAY_ITEM","payload","menuItem","start","TOOLBAR_ITEM","EMAIL_ADDRESS","EMAIL_SUBJECT","EMAIL_CONTENT","EMAIL","EMAIL_RESET","VALIDITRON","includes"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,UADS;AAEnBC,EAAAA,KAAK,EAAE,MAFY;AAGnBC,EAAAA,OAAO,EAAE,SAHU;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,YAAY,EAAE,EANK;AAOnBC,EAAAA,aAAa,EAAE,KAPI;AAQnBC,EAAAA,WAAW,EAAE,KARM;AASnBC,EAAAA,WAAW,EAAE;AATM,CAArB;AAYA,eAAe,UAASC,KAAK,GAAGV,YAAjB,EAA+BW,MAAM,GAAG,EAAxC,EAA4C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,mBAAQb,WAAW,CAACc,YAApB;AAAA,8BAC8BF,MAAM,CAACG,OADrC;AAAA,YACUC,QADV,mBACUA,QADV;AAAA,YACoBb,KADpB,mBACoBA,KADpB;AAEE,UAAIc,KAAK,GAAG,SAAZ,CAFF,CAGE;;AAEA,cAAQD,QAAR;AACE,aAAK,WAAL;AACEC,UAAAA,KAAK,GAAG,UAAR;AACA;;AACF,aAAK,QAAL;AACEA,UAAAA,KAAK,GAAG,iBAAR;AACA;;AACF,aAAK,SAAL;AACEA,UAAAA,KAAK,GAAG,QAAR;AACA;;AACF;AACE;AAXJ;;AAaA,6CACKN,KADL;AAEET,QAAAA,QAAQ,EAAEc,QAFZ;AAGEb,QAAAA,KAAK,EAAEA,KAHT;AAIEC,QAAAA,OAAO,EAAEa;AAJX;;AAOF,mBAAQjB,WAAW,CAACkB,YAApB;AACE,6CACKP,KADL;AAEEP,QAAAA,OAAO,EAAEQ,MAAM,CAACG;AAFlB;;AAKF,mBAAQf,WAAW,CAACmB,aAApB;AACE,6CACKR,KADL;AAEEN,QAAAA,YAAY,EAAEO,MAAM,CAACG;AAFvB;;AAIF,mBAAQf,WAAW,CAACoB,aAApB;AACE,6CACKT,KADL;AAEEL,QAAAA,YAAY,EAAEM,MAAM,CAACG;AAFvB;;AAIF,mBAAQf,WAAW,CAACqB,aAApB;AACE,6CACKV,KADL;AAEEJ,QAAAA,YAAY,EAAEK,MAAM,CAACG;AAFvB;;AAKF,mBAAQf,WAAW,CAACsB,KAApB;AACE,6CACKX,KADL;AAEEH,QAAAA,aAAa,EAAEI,MAAM,CAACG;AAFxB;;AAKF,mBAAQf,WAAW,CAACuB,WAApB;AACE,6CACKZ,KADL;AAEEH,QAAAA,aAAa,EAAEI,MAAM,CAACG;AAFxB;;AAKF,mBAAQf,WAAW,CAACwB,UAApB;AACE,YAAMf,WAAW,GAAGG,MAAM,CAACG,OAAP,CAAeU,QAAf,CAAwB,SAAxB,CAApB;AACA,YAAMf,WAAW,GAAGE,MAAM,CAACG,OAAP,CAAeU,QAAf,CAAwB,SAAxB,CAApB;AACA,6CACKd,KADL;AAEEF,QAAAA,WAFF;AAGEC,QAAAA;AAHF;;AAMF;AACE,aAAOC,KAAP;AAtEJ;AAwED","sourcesContent":["import * as actionTypes from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  location: \"Homepage\",\r\n  color: \"blue\",\r\n  toolbar: \"default\",\r\n  emailAddress: \"\",\r\n  emailSubject: \"\",\r\n  emailContent: \"\",\r\n  emailRecieved: false,\r\n  addressFail: false,\r\n  contentFail: false\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case `${actionTypes.DISPLAY_ITEM}`:\r\n      const { menuItem, color } = action.payload;\r\n      let start = \"default\";\r\n      //TODO: add contact page\r\n\r\n      switch (menuItem) {\r\n        case \"Portfolio\":\r\n          start = \"Homepage\";\r\n          break;\r\n        case \"Resume\":\r\n          start = \"Work Experience\";\r\n          break;\r\n        case \"Contact\":\r\n          start = \"E-Mail\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return {\r\n        ...state,\r\n        location: menuItem,\r\n        color: color,\r\n        toolbar: start\r\n      };\r\n\r\n    case `${actionTypes.TOOLBAR_ITEM}`:\r\n      return {\r\n        ...state,\r\n        toolbar: action.payload\r\n      };\r\n\r\n    case `${actionTypes.EMAIL_ADDRESS}`:\r\n      return {\r\n        ...state,\r\n        emailAddress: action.payload\r\n      };\r\n    case `${actionTypes.EMAIL_SUBJECT}`:\r\n      return {\r\n        ...state,\r\n        emailSubject: action.payload\r\n      };\r\n    case `${actionTypes.EMAIL_CONTENT}`:\r\n      return {\r\n        ...state,\r\n        emailContent: action.payload\r\n      };\r\n\r\n    case `${actionTypes.EMAIL}_FULFILLED`:\r\n      return {\r\n        ...state,\r\n        emailRecieved: action.payload\r\n      };\r\n\r\n    case `${actionTypes.EMAIL_RESET}`:\r\n      return {\r\n        ...state,\r\n        emailRecieved: action.payload\r\n      };\r\n\r\n    case `${actionTypes.VALIDITRON}`:\r\n      const addressFail = action.payload.includes(\"address\");\r\n      const contentFail = action.payload.includes(\"content\");\r\n      return {\r\n        ...state,\r\n        addressFail,\r\n        contentFail\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}